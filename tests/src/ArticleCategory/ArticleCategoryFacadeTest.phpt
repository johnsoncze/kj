<?php

namespace App\Tests\ArticleCategory;

require_once __DIR__ . "/../bootstrap.php";

\Tester\Environment::lock("database", TEMP_TEST);

use App\Article\Module\ModuleRepository;
use App\ArticleCategory\ArticleCategoryFacade;
use App\ArticleCategory\ArticleCategoryFacadeFactory;
use App\ArticleCategory\ArticleCategoryRepository;
use App\ArticleCategory\ArticleCategoryRepositoryFactory;
use App\FacadeException;
use App\Language\LanguageEntity;
use App\Tests\Article\Module\ModuleTestTrait;
use App\Tests\BaseTestCase;
use Tester\Assert;


class ArticleCategory extends BaseTestCase
{


    use ArticleCategoryTestTrait;
    use ModuleTestTrait;

    /** @var ArticleCategoryFacade */
    protected $facade;

    /** @var ModuleRepository */
    protected $moduleRepo;

    /** @var ArticleCategoryRepository */
    protected $repository;



    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->facade = $this->container->getByType(ArticleCategoryFacadeFactory::class)->create();
        $this->moduleRepo = $this->container->getByType(ModuleRepository::class);
        $this->repository = $this->container->getByType(ArticleCategoryRepositoryFactory::class)->create();
    }



    public function testSaveSame()
    {
        $facade = $this->facade;

        $languageEntity = new LanguageEntity();
        $languageEntity->setId("1");

        //create test module
        $module = $this->createTestModule();
        $this->moduleRepo->save($module);

        //create test article category
        $articleCategory = $this->createTestArticleCategory();
        $articleCategory->setModuleId($module->getId());
        $this->moduleRepo->save($articleCategory);

        $this->addEntityForRemove($articleCategory, $this->repository);
        $this->addEntityForRemove($module, $this->moduleRepo);

        //Name exists
        Assert::exception(function () use ($facade, $languageEntity, $module, $articleCategory) {
            $facade->add($languageEntity, $module->getId(), $articleCategory->getName(), "url-kategorie", "titulek SEO", "popis SEo");
        }, FacadeException::class);
    }
}

(new ArticleCategory())->run();